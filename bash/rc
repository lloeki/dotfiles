## bashrc, called for interactive shells

if [[ $- != *i* ]]; then
    return
fi

[[ -z "$DOTFILES_ROOT_DIR" ]] && source "$HOME/.dotfilesrc"

source $DOTFILES_SHELL_DIR/aliases
source $DOTFILES_BASH_DIR/ext
source $DOTFILES_BASH_DIR/ansi
source $DOTFILES_BASH_DIR/prompt
source $DOTFILES_BASH_DIR/history
source $DOTFILES_BASH_DIR/term_title
source $DOTFILES_BASH_DIR/completion
source $DOTFILES_SHELL_DIR/go
source $DOTFILES_SHELL_DIR/chruby
source $DOTFILES_BASH_DIR/fzf
source $DOTFILES_SHELL_DIR/direnv
source $DOTFILES_SHELL_DIR/kd
#source $DOTFILES_BASH_DIR/kitty

source $DOTFILES_SHELL_DIR/git_prompt_info
GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1

precmd() {
    CMD_RC=$?

    mark_command_exit "${CMD_RC}"

    # if [[ -n ${CMD_START} ]]; then
    #     CMD_END="${EPOCHREALTIME}"
    #     CMD_DURATION=$(bc <<<"${CMD_END} - ${CMD_START}")
    #     unset CMD_START
    #     unset CMD_END
    # fi

    _direnv_hook
    #clear_incomplete_line
    set_prompt
    set_term_title
    mark_prompt
    apply_prompt_rprompt
}

preexec() {
    set_term_title
    CMD_START="${EPOCHREALTIME}"
    mark_command_exec "$1"
}

chpwd() {
    __git_ps1_gitdir
    _gopath
    if _has-chruby; then _auto-chruby; fi
}
chpwd

# Make bash check its window size after a process completes
shopt -s checkwinsize

# easy on spelling mistakes
shopt -s cdspell

# turn off distractive bells
set bell-style none

# disable deprecation warning
export BASH_SILENCE_DEPRECATION_WARNING=1

# vim: ft=bash
